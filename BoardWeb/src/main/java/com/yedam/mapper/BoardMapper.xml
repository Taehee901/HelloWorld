<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- 경로 . ,/다시공부 -->
<mapper namespace="com.yedam.mapper.BoardMapper">
<!-- id 메소드이름,resultType는 return되는 타입 -->
<!-- test는 배포와 관련x 테스트해도됨 -->
  <!-- 조회(selectBoard),메소드 이름 -->
  <select id="selectList" resultType="Board">
    <!-- select * from tbl_board , select board_no as-->
    select * from tbl_board 
  </select>
  
  
  <!-- 페이징 조회() <에러 새로운 태그시작으로 인식 ㅊ데이타태크 -->
  <!-- <![CDATA[로 감싸줘야지 부등호로 인식한다. -->
  <!-- 
    <select id="selectListWithPaging" parameterType="int" resultType="Board">
   select b.*  
   from  (select rownum rn, a.*
          from  (select *
                 from   tbl_board
                 order by board_no desc) a)b
where  b.rn >= 1(:page -1) *5
and    b.rn >= 5;
	<![CDATA[
          where  b.rn > (#{page} -1) *5
			and   b.rn <= #{page} * 5
	]]>
  </select>
   -->
  <select id="selectListWithPaging" parameterType="Search" resultType="Board">
   select b.*  
   from  (select rownum rn, a.*
          from  (select *
                 from   tbl_board
                 <!-- when 조건문넣음,쿼리가아니라 자바코드가 들어감 이스케이프나,문자열사용하면됨, when = else if '%'test%'  || 두문장연결할때사용-->
                 <choose>
                 <!-- CDATA를 select문 위에하면어떨게되나,태그기호를 인식하지말고 부등호로인식하기위해,t면 title칼럼에서 입력값조회하겠다는의미,toString은 이스케이프문자쓰기 복잡하니까 덜복잡하게쓰기위해서,toSting메소드를 사용하거나  -->
                 	<when test="searchCondition != null and searchCondition == 'T'.toString()">
                 		where title like '%'||#{keyword}||'%' 
                 	</when>
                 	<when test="searchCondition != null and searchCondition =='W'.toString()">
                 		where writer like '%'||#{keyword}||'%'
                 	</when>
                 	<when test="searchCondition != null and searchCondition == 'TW'.toString()">
                 		where (title like '%'||#{keyword}||'%') or (writer like '%'||#{keyword}||'%')
                 	</when>
                 </choose>
                 order by board_no desc) a)b
          where  b.rn > (#{page} -1) *5
<!--where  b.rn >= 1(:page -1) *5-->
<!--and    b.rn >= 5;-->
	<![CDATA[
			and   b.rn <= #{page} * 5
	]]>
  </select>
  
  <!-- selectCount()전체 카운트 계산 selectCount= 메퍼 이름 같아야함
  1 컬럼이라는 뜻 = *써도됨 
    <select id="selectCount" resultType="int">
  	select count(1)
  	from   tbl_board 
  </select>
  -->
  <select id="selectCount" resultType="int" parameterType="Search">
  	select count(1)
  	from   tbl_board 
  	  <choose>
         <!-- CDATA를 select문 위에하면어떨게되나,태그기호를 인식하지말고 부등호로인식하기위해,t면 title칼럼에서 입력값조회하겠다는의미,toString은 이스케이프문자쓰기 복잡하니까 덜복잡하게쓰기위해서,toSting메소드를 사용하거나  -->
          <when test="searchCondition != null and searchCondition == 'T'.toString()">
             where title like '%'||#{keyword}||'%' 
          </when>
          <when test="searchCondition != null and searchCondition =='W'.toString()">
            where writer like '%'||#{keyword}||'%'
          </when>
          <when test="searchCondition != null and searchCondition == 'TW'.toString()">
            where (title like '%'||#{keyword}||'%') or (writer like '%'||#{keyword}||'%')
           </when>
     </choose>
  </select>
  
  
  <!-- 상세조회(selectBoard) -->
  <select id="selectBoard" parameterType="int" resultType="Board">
  	select board_no
  		  ,title
  		  ,content
  		  ,writer
  		  ,write_date
  		  ,read_cnt
    from  tbl_board
  	where board_no = #{bno}
  </select>
  
  <!-- 조회수 증가 -->
  <update id="updateReadCnt" parameterType="int">
  	update tbl_board
  	set    read_cnt = read_cnt +1
  	where board_no = #{bno}
  </update>
  
  

  <!-- 등록(insertBoard) -->
  <!-- 태그는 insert를 써야 함,파라미터로전달하는 데이터타입은 BoardVO => 이름이 같아 컬럼이라 생각할 수 있지만 #{필드값(필드이름적어주면됨)},jdbc ?-->
  <insert id="insertList" parameterType="Board">
  	insert into tbl_board (board_no,title,content,writer)
  	values(board_seq.nextval, #{title},#{content}, #{writer})
  </insert>
  
  <!-- 수정(updateBoard) com.yedam.vo.BoardVO-->
  <update id="updateBoard" parameterType="Board" >
  	update tbl_board
  	<!-- 첫번째 널이면 두번째값 씀 -->
<!-- set    title = nvl(#{title},title) -->  
	<set>
  	<!-- 널 체크 -->
	  	<if test="title != null">
	  		title = #{title},
	  	</if>
	  	<if test="content != null">
	  		content = #{content},
	  	</if>
	  	<if test="writer != null">
	  		writer = #{writer}
	  	</if>
	</set>	
	where board_no = #{boardNo}
  </update>
  
  <!-- 삭제(deleteBoard) parameterType = "int" -->
  <delete id="deleteBoard" parameterType="int">
  	delete from tbl_board
  	where  board_no = #{boardNo}
  </delete>
<!-- set 값이 있으면 적절한거 넣어줌,없던말던 set에 넣어주면알아서처리 -->
</mapper>
